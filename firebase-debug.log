[debug] [2020-12-01T18:10:03.590Z] ----------------------------------------------------------------------
[debug] [2020-12-01T18:10:03.591Z] Command:       C:\Program Files\nodejs\node.exe C:\Program Files\nodejs\node_modules\firebase-tools\lib\bin\firebase.js emulators:start
[debug] [2020-12-01T18:10:03.592Z] CLI Version:   8.16.2
[debug] [2020-12-01T18:10:03.592Z] Platform:      win32
[debug] [2020-12-01T18:10:03.592Z] Node Version:  v10.21.0
[debug] [2020-12-01T18:10:03.592Z] Time:          Tue Dec 01 2020 11:10:03 GMT-0700 (Mountain Standard Time)
[debug] [2020-12-01T18:10:03.592Z] ----------------------------------------------------------------------
[debug] [2020-12-01T18:10:03.593Z] 
[debug] [2020-12-01T18:10:03.600Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-12-01T18:10:03.600Z] > authorizing via signed-in user
[info] i  emulators: Starting emulators: auth, functions, firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: auth, functions, firestore"}}
[debug] [2020-12-01T18:10:05.676Z] [hub] writing locator at C:\Users\delan\AppData\Local\Temp\hub-fireship-dev-17429.json
[warn] !  functions: The following emulators are not running, calls to these services from the Functions emulator will affect production: database, hosting, pubsub {"metadata":{"emulator":{"name":"functions"},"message":"The following emulators are not running, calls to these services from the Functions emulator will affect production: \u001b[1mdatabase, hosting, pubsub\u001b[22m"}}
[warn] !  Your requested "node" version "12" doesn't match your global version "10" {"metadata":{"emulator":{"name":"functions"},"message":"Your requested \"node\" version \"12\" doesn't match your global version \"10\""}}
[debug] [2020-12-01T18:10:07.756Z] defaultcredentials: writing to file C:\Users\delan\AppData\Roaming\firebase\delaneyphx_gmail_com_application_default_credentials.json
[debug] [2020-12-01T18:10:07.762Z] Setting GAC to C:\Users\delan\AppData\Roaming\firebase\delaneyphx_gmail_com_application_default_credentials.json {"metadata":{"emulator":{"name":"functions"},"message":"Setting GAC to C:\\Users\\delan\\AppData\\Roaming\\firebase\\delaneyphx_gmail_com_application_default_credentials.json"}}
[debug] [2020-12-01T18:10:09.834Z] Ignoring unsupported arg: projectId {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: projectId"}}
[debug] [2020-12-01T18:10:09.834Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2020-12-01T18:10:09.834Z] Starting Firestore Emulator with command {"binary":"java","args":["-Duser.language=en","-jar","C:\\Users\\delan\\.cache\\firebase\\emulators\\cloud-firestore-emulator-v1.11.9.jar","--host","localhost","--port",8080,"--rules","C:\\Users\\delan\\apps\\firebase-security\\firestore.rules","--functions_emulator","localhost:5001"],"optionalArgs":["port","webchannel_port","host","rules","functions_emulator","seed_from_export"],"joinArgs":false} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Duser.language=en\",\"-jar\",\"C:\\\\Users\\\\delan\\\\.cache\\\\firebase\\\\emulators\\\\cloud-firestore-emulator-v1.11.9.jar\",\"--host\",\"localhost\",\"--port\",8080,\"--rules\",\"C:\\\\Users\\\\delan\\\\apps\\\\firebase-security\\\\firestore.rules\",\"--functions_emulator\",\"localhost:5001\"],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"functions_emulator\",\"seed_from_export\"],\"joinArgs\":false}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[debug] [2020-12-01T18:10:10.760Z] API endpoint: http://localhost:8080
 {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://localhost:8080\n"}}
[debug] [2020-12-01T18:10:10.760Z] If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=localhost:8080

Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\r\n\n   export FIRESTORE_EMULATOR_HOST=localhost:8080\n\nDev App Server is now running.\n\r\n"}}
[debug] [2020-12-01T18:10:10.841Z] Dec 01, 2020 11:10:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:10:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:10:14.751Z] Dec 01, 2020 11:10:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:10:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:10:15.048Z] Dec 01, 2020 11:10:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:10:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:10:15.093Z] Dec 01, 2020 11:10:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:10:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:10:15.223Z] Dec 01, 2020 11:10:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:10:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:10:15.434Z] Dec 01, 2020 11:10:15 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError
INFO: operation failed: 
false for 'update' @ L15
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:10:15 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError\r\nINFO: operation failed: \nfalse for 'update' @ L15\r\n"}}
[debug] [2020-12-01T18:10:15.693Z] Dec 01, 2020 11:10:15 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:10:15 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T18:10:15.693Z] Dec 01, 2020 11:10:15 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:10:15 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T18:10:18.841Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2020-12-01T18:10:18.842Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
[debug] [2020-12-01T18:10:18.842Z] Starting Emulator UI with command {"binary":"node","args":["C:\\Users\\delan\\.cache\\firebase\\emulators\\ui-v1.2.2\\server.bundle.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"C:\\\\Users\\\\delan\\\\.cache\\\\firebase\\\\emulators\\\\ui-v1.2.2\\\\server.bundle.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
[debug] [2020-12-01T18:10:18.985Z] Web / API server started at http://localhost:4000
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at http://localhost:4000\n"}}
[debug] [2020-12-01T18:10:18.993Z] Dec 01, 2020 11:10:18 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:10:18 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[info] i  functions: Watching "C:\Users\delan\apps\firebase-security\functions" for Cloud Functions... {"metadata":{"emulator":{"name":"functions"},"message":"Watching \"C:\\Users\\delan\\apps\\firebase-security\\functions\" for Cloud Functions..."}}
[debug] [2020-12-01T18:10:19.389Z] [worker-pool] addWorker(~diagnostic~) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(~diagnostic~)"}}
[debug] [2020-12-01T18:10:19.389Z] [worker-pool] Adding worker with key ~diagnostic~, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key ~diagnostic~, total=1"}}
[debug] [2020-12-01T18:10:19.389Z] [worker-pool] submitWork(triggerId=) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitWork(triggerId=)"}}
[debug] [2020-12-01T18:10:19.390Z] [worker-~diagnostic~-d10b0ce3-09c0-45b4-9223-265fa16c880b]: Assigning socketPath: \\?\pipe\C:\Users\delan\apps\firebase-security\functions\50908 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-~diagnostic~-d10b0ce3-09c0-45b4-9223-265fa16c880b]: Assigning socketPath: \\\\?\\pipe\\C:\\Users\\delan\\apps\\firebase-security\\functions\\50908"}}
[debug] [2020-12-01T18:10:19.390Z] [worker-~diagnostic~-d10b0ce3-09c0-45b4-9223-265fa16c880b]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-~diagnostic~-d10b0ce3-09c0-45b4-9223-265fa16c880b]: BUSY"}}
[debug] [2020-12-01T18:10:19.670Z] Dec 01, 2020 11:10:19 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:10:19 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:10:19.769Z] [runtime-status] [50908] Functions runtime initialized. {"cwd":"C:\\Users\\delan\\apps\\firebase-security\\functions","node_version":"10.21.0"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] Functions runtime initialized. {\"cwd\":\"C:\\\\Users\\\\delan\\\\apps\\\\firebase-security\\\\functions\",\"node_version\":\"10.21.0\"}"}}
[debug] [2020-12-01T18:10:19.770Z] [runtime-status] [50908] Disabled runtime features: undefined {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] Disabled runtime features: undefined"}}
[debug] [2020-12-01T18:10:19.772Z] [runtime-status] [50908] Resolved module firebase-admin {"declared":true,"installed":true,"version":"9.4.1","resolution":"C:\\Users\\delan\\apps\\firebase-security\\functions\\node_modules\\firebase-admin\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"9.4.1\",\"resolution\":\"C:\\\\Users\\\\delan\\\\apps\\\\firebase-security\\\\functions\\\\node_modules\\\\firebase-admin\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-01T18:10:19.774Z] [runtime-status] [50908] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.11.0","resolution":"C:\\Users\\delan\\apps\\firebase-security\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.11.0\",\"resolution\":\"C:\\\\Users\\\\delan\\\\apps\\\\firebase-security\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-01T18:10:19.774Z] [runtime-status] [50908] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.11.0","resolution":"C:\\Users\\delan\\apps\\firebase-security\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.11.0\",\"resolution\":\"C:\\\\Users\\\\delan\\\\apps\\\\firebase-security\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-01T18:10:19.777Z] [runtime-status] [50908] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2020-12-01T18:10:19.778Z] [runtime-status] [50908] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.11.0","resolution":"C:\\Users\\delan\\apps\\firebase-security\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.11.0\",\"resolution\":\"C:\\\\Users\\\\delan\\\\apps\\\\firebase-security\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-01T18:10:19.818Z] [runtime-status] [50908] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] Checked functions.config() {\"config\":{}}"}}
[debug] [2020-12-01T18:10:19.818Z] [runtime-status] [50908] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"3.11.0","resolution":"C:\\Users\\delan\\apps\\firebase-security\\functions\\node_modules\\firebase-functions\\lib\\index.js"}} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"3.11.0\",\"resolution\":\"C:\\\\Users\\\\delan\\\\apps\\\\firebase-security\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}}"}}
[debug] [2020-12-01T18:10:19.819Z] [runtime-status] [50908] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.11.0","resolution":"C:\\Users\\delan\\apps\\firebase-security\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.11.0\",\"resolution\":\"C:\\\\Users\\\\delan\\\\apps\\\\firebase-security\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-01T18:10:19.819Z] [runtime-status] [50908] Resolved module firebase-admin {"declared":true,"installed":true,"version":"9.4.1","resolution":"C:\\Users\\delan\\apps\\firebase-security\\functions\\node_modules\\firebase-admin\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"9.4.1\",\"resolution\":\"C:\\\\Users\\\\delan\\\\apps\\\\firebase-security\\\\functions\\\\node_modules\\\\firebase-admin\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-01T18:10:19.820Z] [runtime-status] [50908] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.11.0","resolution":"C:\\Users\\delan\\apps\\firebase-security\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.11.0\",\"resolution\":\"C:\\\\Users\\\\delan\\\\apps\\\\firebase-security\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-01T18:10:19.820Z] [runtime-status] [50908] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"9.4.1","resolution":"C:\\Users\\delan\\apps\\firebase-security\\functions\\node_modules\\firebase-admin\\lib\\index.js"}} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [50908] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"9.4.1\",\"resolution\":\"C:\\\\Users\\\\delan\\\\apps\\\\firebase-security\\\\functions\\\\node_modules\\\\firebase-admin\\\\lib\\\\index.js\"}}"}}
[info] 
┌────────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! View status and logs at localhost:4000 │
└────────────────────────────────────────────────────────────────┘

┌────────────────┬────────────────┬──────────────────────────┐
│ Emulator       │ Host:Port      │ View in Emulator UI      │
├────────────────┼────────────────┼──────────────────────────┤
│ Authentication │ localhost:9099 │ localhost:4000/auth      │
├────────────────┼────────────────┼──────────────────────────┤
│ Functions      │ localhost:5001 │ localhost:4000/functions │
├────────────────┼────────────────┼──────────────────────────┤
│ Firestore      │ localhost:8080 │ localhost:4000/firestore │
└────────────────┴────────────────┴──────────────────────────┘
  Other reserved ports: 4400, 4500

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2020-12-01T18:10:19.824Z] [worker-~diagnostic~-d10b0ce3-09c0-45b4-9223-265fa16c880b]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-~diagnostic~-d10b0ce3-09c0-45b4-9223-265fa16c880b]: IDLE"}}
[debug] [2020-12-01T18:11:06.896Z] Dec 01, 2020 11:11:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:11:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:12:06.925Z] Dec 01, 2020 11:12:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:12:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:13:07.266Z] Dec 01, 2020 11:13:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:13:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-01T18:13:27.152Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasOnly(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-01T18:13:27.156Z] Dec 01, 2020 11:13:27 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:13:27 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:13:27.197Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-01T18:14:07.299Z] Dec 01, 2020 11:14:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:14:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:15:07.653Z] Dec 01, 2020 11:15:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:15:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-01T18:15:42.675Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-01T18:15:42.678Z] Dec 01, 2020 11:15:42 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:15:42 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:15:42.712Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-01T18:15:53.591Z] Dec 01, 2020 11:15:53 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:15:53 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:16:06.435Z] Dec 01, 2020 11:16:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:16:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:16:06.463Z] Dec 01, 2020 11:16:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:16:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:16:06.561Z] Dec 01, 2020 11:16:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:16:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:16:06.668Z] Dec 01, 2020 11:16:06 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:16:06 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T18:16:06.668Z] Dec 01, 2020 11:16:06 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:16:06 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T18:17:06.786Z] Dec 01, 2020 11:17:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:17:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:18:06.834Z] Dec 01, 2020 11:18:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:18:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:19:07.179Z] Dec 01, 2020 11:19:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:19:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:20:07.227Z] Dec 01, 2020 11:20:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:20:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:21:07.577Z] Dec 01, 2020 11:21:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:21:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:22:07.602Z] Dec 01, 2020 11:22:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:22:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:23:07.940Z] Dec 01, 2020 11:23:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:23:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:24:07.981Z] Dec 01, 2020 11:24:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:24:07 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:25:08.325Z] Dec 01, 2020 11:25:08 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:25:08 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:26:08.351Z] Dec 01, 2020 11:26:08 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:26:08 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:27:08.672Z] Dec 01, 2020 11:27:08 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:27:08 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:28:08.715Z] Dec 01, 2020 11:28:08 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:28:08 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:29:09.073Z] Dec 01, 2020 11:29:09 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:29:09 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:30:09.115Z] Dec 01, 2020 11:30:09 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:30:09 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:31:09.479Z] Dec 01, 2020 11:31:09 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:31:09 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:32:09.516Z] Dec 01, 2020 11:32:09 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:32:09 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:33:09.861Z] Dec 01, 2020 11:33:09 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:33:09 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:34:09.905Z] Dec 01, 2020 11:34:09 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:34:09 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:35:10.248Z] Dec 01, 2020 11:35:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:35:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:36:10.285Z] Dec 01, 2020 11:36:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:36:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:36:55.897Z] Dec 01, 2020 11:36:55 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:36:55 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:37:55.924Z] Dec 01, 2020 11:37:55 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:37:55 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:38:56.273Z] Dec 01, 2020 11:38:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:38:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:39:56.316Z] Dec 01, 2020 11:39:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:39:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:40:56.676Z] Dec 01, 2020 11:40:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:40:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:41:56.717Z] Dec 01, 2020 11:41:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:41:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:42:57.063Z] Dec 01, 2020 11:42:57 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:42:57 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:43:57.113Z] Dec 01, 2020 11:43:57 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:43:57 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:45:12.893Z] Dec 01, 2020 11:45:12 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:45:12 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:46:12.947Z] Dec 01, 2020 11:46:12 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:46:12 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:47:13.294Z] Dec 01, 2020 11:47:13 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:47:13 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:48:13.343Z] Dec 01, 2020 11:48:13 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:48:13 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:49:13.685Z] Dec 01, 2020 11:49:13 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:49:13 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:50:13.707Z] Dec 01, 2020 11:50:13 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:50:13 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:51:14.062Z] Dec 01, 2020 11:51:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:51:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:52:14.103Z] Dec 01, 2020 11:52:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:52:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:53:14.459Z] Dec 01, 2020 11:53:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:53:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:54:14.492Z] Dec 01, 2020 11:54:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:54:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:55:14.838Z] Dec 01, 2020 11:55:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:55:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:56:14.872Z] Dec 01, 2020 11:56:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:56:14 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:57:15.226Z] Dec 01, 2020 11:57:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:57:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:58:15.246Z] Dec 01, 2020 11:58:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:58:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T18:59:15.593Z] Dec 01, 2020 11:59:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 11:59:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:00:15.614Z] Dec 01, 2020 12:00:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:00:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:01:01.899Z] Dec 01, 2020 12:01:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:01:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:02:01.941Z] Dec 01, 2020 12:02:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:02:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:03:02.293Z] Dec 01, 2020 12:03:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:03:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:04:02.335Z] Dec 01, 2020 12:04:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:04:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:05:02.675Z] Dec 01, 2020 12:05:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:05:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:06:02.686Z] Dec 01, 2020 12:06:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:06:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:06:48.902Z] Dec 01, 2020 12:06:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:06:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:07:48.940Z] Dec 01, 2020 12:07:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:07:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:08:49.295Z] Dec 01, 2020 12:08:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:08:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:09:49.323Z] Dec 01, 2020 12:09:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:09:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:10:49.659Z] Dec 01, 2020 12:10:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:10:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:11:49.694Z] Dec 01, 2020 12:11:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:11:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:12:50.053Z] Dec 01, 2020 12:12:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:12:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:13:50.070Z] Dec 01, 2020 12:13:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:13:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:14:50.432Z] Dec 01, 2020 12:14:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:14:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:15:50.467Z] Dec 01, 2020 12:15:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:15:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:16:50.801Z] Dec 01, 2020 12:16:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:16:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:17:50.840Z] Dec 01, 2020 12:17:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:17:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:18:51.196Z] Dec 01, 2020 12:18:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:18:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:19:51.214Z] Dec 01, 2020 12:19:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:19:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:20:51.543Z] Dec 01, 2020 12:20:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:20:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:21:51.588Z] Dec 01, 2020 12:21:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:21:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:22:51.941Z] Dec 01, 2020 12:22:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:22:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:23:51.988Z] Dec 01, 2020 12:23:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:23:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:24:52.335Z] Dec 01, 2020 12:24:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:24:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:25:52.388Z] Dec 01, 2020 12:25:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:25:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:26:52.712Z] Dec 01, 2020 12:26:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:26:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:27:52.743Z] Dec 01, 2020 12:27:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:27:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:28:53.100Z] Dec 01, 2020 12:28:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:28:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:29:53.139Z] Dec 01, 2020 12:29:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:29:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:30:53.491Z] Dec 01, 2020 12:30:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:30:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:31:53.523Z] Dec 01, 2020 12:31:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:31:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:32:53.868Z] Dec 01, 2020 12:32:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:32:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:33:53.902Z] Dec 01, 2020 12:33:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:33:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:34:54.249Z] Dec 01, 2020 12:34:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:34:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:35:54.289Z] Dec 01, 2020 12:35:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:35:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:36:40.896Z] Dec 01, 2020 12:36:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:36:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:37:40.936Z] Dec 01, 2020 12:37:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:37:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:38:41.280Z] Dec 01, 2020 12:38:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:38:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:39:41.329Z] Dec 01, 2020 12:39:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:39:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:40:41.684Z] Dec 01, 2020 12:40:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:40:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:41:41.708Z] Dec 01, 2020 12:41:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:41:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:42:42.041Z] Dec 01, 2020 12:42:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:42:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:43:42.080Z] Dec 01, 2020 12:43:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:43:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:44:27.885Z] Dec 01, 2020 12:44:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:44:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:45:27.925Z] Dec 01, 2020 12:45:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:45:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:46:28.277Z] Dec 01, 2020 12:46:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:46:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:47:28.311Z] Dec 01, 2020 12:47:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:47:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:48:43.898Z] Dec 01, 2020 12:48:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:48:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:49:43.938Z] Dec 01, 2020 12:49:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:49:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:50:44.283Z] Dec 01, 2020 12:50:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:50:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:51:44.331Z] Dec 01, 2020 12:51:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:51:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:52:44.681Z] Dec 01, 2020 12:52:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:52:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:53:44.729Z] Dec 01, 2020 12:53:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:53:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:54:45.079Z] Dec 01, 2020 12:54:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:54:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:55:45.110Z] Dec 01, 2020 12:55:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:55:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:56:45.451Z] Dec 01, 2020 12:56:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:56:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:57:45.495Z] Dec 01, 2020 12:57:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:57:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:58:45.840Z] Dec 01, 2020 12:58:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:58:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T19:59:45.863Z] Dec 01, 2020 12:59:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 12:59:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:00:46.202Z] Dec 01, 2020 1:00:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:00:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:02:01.889Z] Dec 01, 2020 1:02:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:02:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:03:17.887Z] Dec 01, 2020 1:03:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:03:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:04:33.903Z] Dec 01, 2020 1:04:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:04:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:04:38.194Z] Dec 01, 2020 1:04:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:04:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:04:38.195Z] Dec 01, 2020 1:04:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:04:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:04:38.205Z] Dec 01, 2020 1:04:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:04:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:05:33.943Z] Dec 01, 2020 1:05:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:05:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:06:34.279Z] Dec 01, 2020 1:06:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:06:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:07:34.305Z] Dec 01, 2020 1:07:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:07:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-01T20:08:12.768Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-01T20:08:12.770Z] Dec 01, 2020 1:08:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:08:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:08:12.833Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-01T20:08:34.626Z] Dec 01, 2020 1:08:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:08:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:09:34.643Z] Dec 01, 2020 1:09:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:09:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:10:34.979Z] Dec 01, 2020 1:10:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:10:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:11:34.996Z] Dec 01, 2020 1:11:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:11:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:12:35.326Z] Dec 01, 2020 1:12:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:12:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:13:35.352Z] Dec 01, 2020 1:13:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:13:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:14:35.686Z] Dec 01, 2020 1:14:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:14:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:15:35.705Z] Dec 01, 2020 1:15:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:15:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:16:36.042Z] Dec 01, 2020 1:16:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:16:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:17:36.083Z] Dec 01, 2020 1:17:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:17:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:18:36.418Z] Dec 01, 2020 1:18:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:18:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:19:36.439Z] Dec 01, 2020 1:19:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:19:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:20:36.766Z] Dec 01, 2020 1:20:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:20:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:21:36.783Z] Dec 01, 2020 1:21:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:21:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:22:37.114Z] Dec 01, 2020 1:22:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:22:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:23:37.133Z] Dec 01, 2020 1:23:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:23:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:24:37.461Z] Dec 01, 2020 1:24:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:24:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:25:37.488Z] Dec 01, 2020 1:25:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:25:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:26:37.816Z] Dec 01, 2020 1:26:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:26:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:27:37.839Z] Dec 01, 2020 1:27:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:27:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:28:38.169Z] Dec 01, 2020 1:28:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:28:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:29:38.183Z] Dec 01, 2020 1:29:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:29:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:30:38.527Z] Dec 01, 2020 1:30:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:30:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:30:53.380Z] Dec 01, 2020 1:30:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:30:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:30:53.380Z] Dec 01, 2020 1:30:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:30:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:30:56.655Z] Dec 01, 2020 1:30:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:30:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:30:56.659Z] Dec 01, 2020 1:30:56 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:30:56 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose\r\nINFO: channel closed\r\n"}}
[debug] [2020-12-01T20:31:06.248Z] Dec 01, 2020 1:31:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:31:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:31:06.515Z] Dec 01, 2020 1:31:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:31:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:31:06.560Z] Dec 01, 2020 1:31:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:31:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:32:06.580Z] Dec 01, 2020 1:32:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:32:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:33:06.907Z] Dec 01, 2020 1:33:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:33:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:34:06.930Z] Dec 01, 2020 1:34:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:34:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:35:07.260Z] Dec 01, 2020 1:35:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:35:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:36:07.289Z] Dec 01, 2020 1:36:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:36:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:37:07.620Z] Dec 01, 2020 1:37:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:37:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:38:07.648Z] Dec 01, 2020 1:38:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:38:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:39:07.968Z] Dec 01, 2020 1:39:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:39:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:40:07.984Z] Dec 01, 2020 1:40:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:40:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:41:08.319Z] Dec 01, 2020 1:41:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:41:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:42:08.341Z] Dec 01, 2020 1:42:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:42:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:42:40.868Z] Dec 01, 2020 1:42:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:42:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:42:40.893Z] Dec 01, 2020 1:42:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:42:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:42:41.008Z] Dec 01, 2020 1:42:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:42:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:42:41.094Z] Dec 01, 2020 1:42:41 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:42:41 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T20:42:41.095Z] Dec 01, 2020 1:42:41 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:42:41 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T20:43:11.397Z] Dec 01, 2020 1:43:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-01T20:43:16.232Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    allow read;\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-01T20:43:16.235Z] Dec 01, 2020 1:43:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:43:16.295Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-01T20:43:28.494Z] Dec 01, 2020 1:43:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:43:28.523Z] Dec 01, 2020 1:43:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:43:28.636Z] Dec 01, 2020 1:43:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:43:28.684Z] Dec 01, 2020 1:43:28 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:28 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T20:43:28.684Z] Dec 01, 2020 1:43:28 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:28 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-01T20:43:35.405Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    allow read;\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-01T20:43:35.411Z] Dec 01, 2020 1:43:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:43:35.466Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-01T20:43:36.318Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    allow read;\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-01T20:43:36.325Z] Dec 01, 2020 1:43:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:43:36.383Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-01T20:43:42.690Z] Dec 01, 2020 1:43:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:43:42.723Z] Dec 01, 2020 1:43:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:43:42.821Z] Dec 01, 2020 1:43:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:43:42.866Z] Dec 01, 2020 1:43:42 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:42 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T20:43:42.867Z] Dec 01, 2020 1:43:42 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:43:42 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T20:44:13.051Z] Dec 01, 2020 1:44:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-01T20:44:14.992Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    match /{doc=**} {\n      allow read;\n    }\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-01T20:44:14.995Z] Dec 01, 2020 1:44:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:44:15.031Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-01T20:44:20.083Z] Dec 01, 2020 1:44:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:44:20.106Z] Dec 01, 2020 1:44:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:44:20.228Z] Dec 01, 2020 1:44:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:44:20.297Z] Dec 01, 2020 1:44:20 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:20 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T20:44:20.298Z] Dec 01, 2020 1:44:20 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:20 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-01T20:44:51.212Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    match /{doc=**} {\n      allow read;\n    }\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-01T20:44:51.215Z] Dec 01, 2020 1:44:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:44:51.248Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-01T20:44:58.941Z] Dec 01, 2020 1:44:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:44:58.960Z] Dec 01, 2020 1:44:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:44:58.967Z] Dec 01, 2020 1:44:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:44:59.073Z] Dec 01, 2020 1:44:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:44:59.134Z] Dec 01, 2020 1:44:59 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:59 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T20:44:59.134Z] Dec 01, 2020 1:44:59 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:44:59 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T20:45:59.300Z] Dec 01, 2020 1:45:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:45:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-01T20:46:44.911Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-01T20:46:44.913Z] Dec 01, 2020 1:46:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:46:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:46:44.940Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-01T20:46:50.735Z] Dec 01, 2020 1:46:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:46:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:46:50.756Z] Dec 01, 2020 1:46:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:46:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:46:50.765Z] Dec 01, 2020 1:46:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:46:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:46:50.852Z] Dec 01, 2020 1:46:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:46:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:46:50.892Z] Dec 01, 2020 1:46:50 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:46:50 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T20:46:50.893Z] Dec 01, 2020 1:46:50 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:46:50 PM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-01T20:47:51.090Z] Dec 01, 2020 1:47:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:47:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:48:51.116Z] Dec 01, 2020 1:48:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:48:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:49:51.443Z] Dec 01, 2020 1:49:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:49:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:50:51.467Z] Dec 01, 2020 1:50:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:50:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:51:51.810Z] Dec 01, 2020 1:51:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:51:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:52:51.823Z] Dec 01, 2020 1:52:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:52:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:53:52.147Z] Dec 01, 2020 1:53:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:53:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:54:52.168Z] Dec 01, 2020 1:54:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:54:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:55:52.494Z] Dec 01, 2020 1:55:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:55:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:56:52.519Z] Dec 01, 2020 1:56:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:56:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:57:52.856Z] Dec 01, 2020 1:57:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:57:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:58:52.878Z] Dec 01, 2020 1:58:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:58:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T20:59:53.196Z] Dec 01, 2020 1:59:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 1:59:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:00:53.220Z] Dec 01, 2020 2:00:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:00:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:01:53.550Z] Dec 01, 2020 2:01:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:01:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:02:53.586Z] Dec 01, 2020 2:02:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:02:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:03:53.932Z] Dec 01, 2020 2:03:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:03:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:04:53.954Z] Dec 01, 2020 2:04:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:04:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:05:54.304Z] Dec 01, 2020 2:05:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:05:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:06:54.338Z] Dec 01, 2020 2:06:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:06:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:07:54.681Z] Dec 01, 2020 2:07:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:07:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:08:54.697Z] Dec 01, 2020 2:08:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:08:54 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:10:11.891Z] Dec 01, 2020 2:10:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:10:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:11:11.932Z] Dec 01, 2020 2:11:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:11:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:12:12.271Z] Dec 01, 2020 2:12:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:12:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:13:12.309Z] Dec 01, 2020 2:13:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:13:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:14:12.646Z] Dec 01, 2020 2:14:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:14:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:15:12.689Z] Dec 01, 2020 2:15:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:15:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:16:13.022Z] Dec 01, 2020 2:16:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:16:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:17:13.064Z] Dec 01, 2020 2:17:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:17:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:18:13.411Z] Dec 01, 2020 2:18:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:18:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:19:28.888Z] Dec 01, 2020 2:19:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:19:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:20:28.941Z] Dec 01, 2020 2:20:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:20:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:21:29.292Z] Dec 01, 2020 2:21:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:21:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:22:29.329Z] Dec 01, 2020 2:22:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:22:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:23:44.888Z] Dec 01, 2020 2:23:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:23:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:24:44.935Z] Dec 01, 2020 2:24:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:24:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:25:45.272Z] Dec 01, 2020 2:25:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:25:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:26:45.305Z] Dec 01, 2020 2:26:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:26:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:27:45.648Z] Dec 01, 2020 2:27:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:27:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:28:45.684Z] Dec 01, 2020 2:28:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:28:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:29:46.045Z] Dec 01, 2020 2:29:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:29:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:30:46.081Z] Dec 01, 2020 2:30:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:30:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:31:46.436Z] Dec 01, 2020 2:31:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:31:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:32:46.470Z] Dec 01, 2020 2:32:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:32:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:33:32.883Z] Dec 01, 2020 2:33:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:33:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:34:32.918Z] Dec 01, 2020 2:34:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:34:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:35:33.272Z] Dec 01, 2020 2:35:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:35:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:36:33.313Z] Dec 01, 2020 2:36:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:36:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:37:33.673Z] Dec 01, 2020 2:37:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:37:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:38:33.698Z] Dec 01, 2020 2:38:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:38:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:39:34.044Z] Dec 01, 2020 2:39:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:39:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:40:34.090Z] Dec 01, 2020 2:40:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:40:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:41:34.436Z] Dec 01, 2020 2:41:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:41:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:42:34.454Z] Dec 01, 2020 2:42:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:42:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:43:19.895Z] Dec 01, 2020 2:43:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:43:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:44:19.941Z] Dec 01, 2020 2:44:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:44:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:45:05.905Z] Dec 01, 2020 2:45:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:45:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:46:05.938Z] Dec 01, 2020 2:46:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:46:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:47:06.291Z] Dec 01, 2020 2:47:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:47:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:48:06.319Z] Dec 01, 2020 2:48:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:48:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:49:06.653Z] Dec 01, 2020 2:49:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:49:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:50:06.686Z] Dec 01, 2020 2:50:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:50:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:51:07.031Z] Dec 01, 2020 2:51:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:51:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:52:07.064Z] Dec 01, 2020 2:52:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:52:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:53:07.431Z] Dec 01, 2020 2:53:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:53:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:54:07.470Z] Dec 01, 2020 2:54:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:54:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:55:07.837Z] Dec 01, 2020 2:55:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:55:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:56:07.867Z] Dec 01, 2020 2:56:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:56:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:57:08.220Z] Dec 01, 2020 2:57:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:57:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:58:23.893Z] Dec 01, 2020 2:58:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:58:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T21:59:23.930Z] Dec 01, 2020 2:59:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 2:59:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:00:24.268Z] Dec 01, 2020 3:00:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:00:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:01:24.311Z] Dec 01, 2020 3:01:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:01:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:02:24.656Z] Dec 01, 2020 3:02:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:02:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:03:24.688Z] Dec 01, 2020 3:03:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:03:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:04:25.044Z] Dec 01, 2020 3:04:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:04:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:05:25.076Z] Dec 01, 2020 3:05:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:05:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:06:25.401Z] Dec 01, 2020 3:06:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:06:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:07:25.447Z] Dec 01, 2020 3:07:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:07:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:08:41.887Z] Dec 01, 2020 3:08:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:08:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:09:41.910Z] Dec 01, 2020 3:09:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:09:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:10:42.252Z] Dec 01, 2020 3:10:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:10:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:11:42.285Z] Dec 01, 2020 3:11:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:11:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:12:42.639Z] Dec 01, 2020 3:12:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:12:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:13:42.665Z] Dec 01, 2020 3:13:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:13:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:14:43.021Z] Dec 01, 2020 3:14:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:14:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:15:43.059Z] Dec 01, 2020 3:15:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:15:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:16:43.398Z] Dec 01, 2020 3:16:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:16:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:17:43.424Z] Dec 01, 2020 3:17:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:17:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:18:43.771Z] Dec 01, 2020 3:18:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:18:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:19:43.809Z] Dec 01, 2020 3:19:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:19:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:20:44.153Z] Dec 01, 2020 3:20:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:20:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:21:29.585Z] Dec 01, 2020 3:21:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:21:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:22:29.920Z] Dec 01, 2020 3:22:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:22:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:23:29.966Z] Dec 01, 2020 3:23:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:23:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:24:45.897Z] Dec 01, 2020 3:24:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:24:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:25:45.945Z] Dec 01, 2020 3:25:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:25:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:26:46.295Z] Dec 01, 2020 3:26:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:26:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:27:46.334Z] Dec 01, 2020 3:27:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:27:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:28:46.692Z] Dec 01, 2020 3:28:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:28:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:29:46.726Z] Dec 01, 2020 3:29:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:29:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:30:32.890Z] Dec 01, 2020 3:30:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:30:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:31:32.917Z] Dec 01, 2020 3:31:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:31:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:32:33.256Z] Dec 01, 2020 3:32:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:32:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:33:48.894Z] Dec 01, 2020 3:33:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:33:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:34:48.928Z] Dec 01, 2020 3:34:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:34:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:35:49.268Z] Dec 01, 2020 3:35:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:35:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:36:49.293Z] Dec 01, 2020 3:36:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:36:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:37:49.621Z] Dec 01, 2020 3:37:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:37:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:38:35.586Z] Dec 01, 2020 3:38:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:38:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:39:35.909Z] Dec 01, 2020 3:39:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:39:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:40:35.940Z] Dec 01, 2020 3:40:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:40:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:41:36.295Z] Dec 01, 2020 3:41:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:41:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:42:36.336Z] Dec 01, 2020 3:42:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:42:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:43:51.892Z] Dec 01, 2020 3:43:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:43:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:44:51.930Z] Dec 01, 2020 3:44:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:44:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:45:52.264Z] Dec 01, 2020 3:45:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:45:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:46:52.304Z] Dec 01, 2020 3:46:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:46:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:47:52.643Z] Dec 01, 2020 3:47:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:47:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:48:52.684Z] Dec 01, 2020 3:48:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:48:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:49:53.028Z] Dec 01, 2020 3:49:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:49:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:50:53.072Z] Dec 01, 2020 3:50:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:50:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:51:53.436Z] Dec 01, 2020 3:51:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:51:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:53:08.892Z] Dec 01, 2020 3:53:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:53:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:54:08.940Z] Dec 01, 2020 3:54:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:54:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:55:09.284Z] Dec 01, 2020 3:55:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:55:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:56:09.334Z] Dec 01, 2020 3:56:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:56:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:57:09.680Z] Dec 01, 2020 3:57:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:57:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:58:09.719Z] Dec 01, 2020 3:58:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:58:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T22:59:10.056Z] Dec 01, 2020 3:59:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 3:59:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:00:10.074Z] Dec 01, 2020 4:00:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:00:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:01:10.417Z] Dec 01, 2020 4:01:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:01:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:02:10.427Z] Dec 01, 2020 4:02:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:02:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:02:55.891Z] Dec 01, 2020 4:02:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:02:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:03:55.920Z] Dec 01, 2020 4:03:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:03:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:04:56.245Z] Dec 01, 2020 4:04:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:04:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:06:11.897Z] Dec 01, 2020 4:06:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:06:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:07:11.917Z] Dec 01, 2020 4:07:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:07:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:08:12.239Z] Dec 01, 2020 4:08:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:08:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:09:12.275Z] Dec 01, 2020 4:09:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:09:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:10:12.605Z] Dec 01, 2020 4:10:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:10:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:11:12.625Z] Dec 01, 2020 4:11:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:11:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:11:32.598Z] Dec 01, 2020 4:11:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:11:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:11:32.599Z] Dec 01, 2020 4:11:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:11:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:11:32.610Z] Dec 01, 2020 4:11:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:11:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:12:12.960Z] Dec 01, 2020 4:12:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:12:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:13:12.978Z] Dec 01, 2020 4:13:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:13:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:14:13.303Z] Dec 01, 2020 4:14:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:14:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:15:13.331Z] Dec 01, 2020 4:15:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:15:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:16:13.662Z] Dec 01, 2020 4:16:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:16:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:17:13.703Z] Dec 01, 2020 4:17:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:17:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:18:14.024Z] Dec 01, 2020 4:18:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:18:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:19:14.062Z] Dec 01, 2020 4:19:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:19:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:20:14.406Z] Dec 01, 2020 4:20:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:20:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:21:14.435Z] Dec 01, 2020 4:21:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:21:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:22:14.764Z] Dec 01, 2020 4:22:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:22:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:23:14.791Z] Dec 01, 2020 4:23:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:23:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:24:15.109Z] Dec 01, 2020 4:24:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:24:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:25:15.133Z] Dec 01, 2020 4:25:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:25:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:26:15.471Z] Dec 01, 2020 4:26:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:26:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:27:15.510Z] Dec 01, 2020 4:27:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:27:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:28:15.841Z] Dec 01, 2020 4:28:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:28:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:28:52.432Z] Dec 01, 2020 4:28:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:28:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:28:52.433Z] Dec 01, 2020 4:28:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:28:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-01T23:32:08.262Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-01T23:32:08.267Z] Dec 01, 2020 4:32:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 01, 2020 4:32:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-01T23:32:08.337Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-02T15:46:18.485Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        \n        \n        \n        \n        \n        \n        \n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nrules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    match /{document=**} {\n      allow read, write: if false;\n    }\n    \n    match /messages/{docId} {\n \t\t\tallow read: if request.auth.uid != null;\n      allow create: if canCreateMessage();\n    }\n    \n  \tfunction canCreateMessage() {\n      let isSignedIn = request.auth.uid != null;\n      let isOwner = request.auth.uid == request.resource.data.uid;\n      let isNotTooLong = request.resource.data.text.size() < 255;\n      let isNow = request.time == request.resource.data.createdAt;\n\n      let isNotBanned = exists(\n      \t/databases/$(database)/documents/banned/$(request.auth.uid)\n      ) == false;\n      \n      return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-02T15:46:18.504Z] Dec 02, 2020 8:46:18 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:46:18 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:46:18.519Z] Dec 02, 2020 8:46:18 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:46:18 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:46:18.603Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"255"}
[warn] !  firestore.rules:69:1 - ERROR Unexpected 'rules_version'. 
[info] +  firestore: Rules updated. 
[debug] [2020-12-02T15:46:27.211Z] Dec 02, 2020 8:46:27 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:46:27 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:46:27.218Z] Dec 02, 2020 8:46:27 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError
INFO: operation failed: Error compiling rules:
L69:1 Unexpected 'rules_version'.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:46:27 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError\r\nINFO: operation failed: Error compiling rules:\nL69:1 Unexpected 'rules_version'.\r\n"}}
[debug] [2020-12-02T15:46:27.277Z] Dec 02, 2020 8:46:27 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:46:27 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:46:27.302Z] Dec 02, 2020 8:46:27 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError
INFO: operation failed: Error compiling rules:
L69:1 Unexpected 'rules_version'.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:46:27 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError\r\nINFO: operation failed: Error compiling rules:\nL69:1 Unexpected 'rules_version'.\r\n"}}
[debug] [2020-12-02T15:46:27.303Z] Dec 02, 2020 8:46:27 AM io.gapi.emulators.netty.HttpHandler$1 onError
INFO: Exception when handling request: INVALID_ARGUMENT: Error compiling rules:
L69:1 Unexpected 'rules_version'.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:46:27 AM io.gapi.emulators.netty.HttpHandler$1 onError\r\nINFO: Exception when handling request: INVALID_ARGUMENT: Error compiling rules:\nL69:1 Unexpected 'rules_version'.\r\n"}}
[debug] [2020-12-02T15:46:27.358Z] Dec 02, 2020 8:46:27 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:46:27 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T15:46:27.358Z] Dec 02, 2020 8:46:27 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:46:27 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T15:47:18.481Z] Dec 02, 2020 8:47:18 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:47:18 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:47:18.484Z] Dec 02, 2020 8:47:18 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError
INFO: operation failed: Error compiling rules:
L69:1 Unexpected 'rules_version'.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:47:18 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError\r\nINFO: operation failed: Error compiling rules:\nL69:1 Unexpected 'rules_version'.\r\n"}}
[debug] [2020-12-02T15:47:18.537Z] Dec 02, 2020 8:47:18 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:47:18 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:47:18.560Z] Dec 02, 2020 8:47:18 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError
INFO: operation failed: Error compiling rules:
L69:1 Unexpected 'rules_version'.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:47:18 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError\r\nINFO: operation failed: Error compiling rules:\nL69:1 Unexpected 'rules_version'.\r\n"}}
[debug] [2020-12-02T15:47:18.560Z] Dec 02, 2020 8:47:18 AM io.gapi.emulators.netty.HttpHandler$1 onError
INFO: Exception when handling request: INVALID_ARGUMENT: Error compiling rules:
L69:1 Unexpected 'rules_version'.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:47:18 AM io.gapi.emulators.netty.HttpHandler$1 onError\r\nINFO: Exception when handling request: INVALID_ARGUMENT: Error compiling rules:\nL69:1 Unexpected 'rules_version'.\r\n"}}
[debug] [2020-12-02T15:47:18.600Z] Dec 02, 2020 8:47:18 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:47:18 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T15:47:18.601Z] Dec 02, 2020 8:47:18 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:47:18 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T15:48:01.103Z] Dec 02, 2020 8:48:01 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:48:01 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:48:01.107Z] Dec 02, 2020 8:48:01 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError
INFO: operation failed: Error compiling rules:
L69:1 Unexpected 'rules_version'.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:48:01 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError\r\nINFO: operation failed: Error compiling rules:\nL69:1 Unexpected 'rules_version'.\r\n"}}
[debug] [2020-12-02T15:48:01.158Z] Dec 02, 2020 8:48:01 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:48:01 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:48:01.180Z] Dec 02, 2020 8:48:01 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError
INFO: operation failed: Error compiling rules:
L69:1 Unexpected 'rules_version'.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:48:01 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError\r\nINFO: operation failed: Error compiling rules:\nL69:1 Unexpected 'rules_version'.\r\n"}}
[debug] [2020-12-02T15:48:01.181Z] Dec 02, 2020 8:48:01 AM io.gapi.emulators.netty.HttpHandler$1 onError
INFO: Exception when handling request: INVALID_ARGUMENT: Error compiling rules:
L69:1 Unexpected 'rules_version'.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:48:01 AM io.gapi.emulators.netty.HttpHandler$1 onError\r\nINFO: Exception when handling request: INVALID_ARGUMENT: Error compiling rules:\nL69:1 Unexpected 'rules_version'.\r\n"}}
[debug] [2020-12-02T15:48:01.224Z] Dec 02, 2020 8:48:01 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:48:01 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T15:48:01.224Z] Dec 02, 2020 8:48:01 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:48:01 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-02T15:48:45.031Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-02T15:48:45.035Z] Dec 02, 2020 8:48:45 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:48:45 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:48:45.078Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-02T15:49:05.563Z] Dec 02, 2020 8:49:05 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:49:05 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:49:05.592Z] Dec 02, 2020 8:49:05 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:49:05 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:49:05.697Z] Dec 02, 2020 8:49:05 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:49:05 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:49:05.770Z] Dec 02, 2020 8:49:05 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:49:05 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T15:49:05.771Z] Dec 02, 2020 8:49:05 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:49:05 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-02T15:49:39.229Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n\n\n\n    \n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n\n    }\n\n\n\n\n\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-02T15:49:39.232Z] Dec 02, 2020 8:49:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:49:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:49:39.289Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"1726"}
[warn] !  firestore.rules:38:14 - WARNING Unused function: isValidNewPost. 
[warn] !  firestore.rules:39:18 - WARNING Invalid variable name: request. 
[warn] !  firestore.rules:40:33 - WARNING Invalid variable name: request. 
[warn] !  firestore.rules:41:19 - WARNING Invalid variable name: request. 
[warn] !  firestore.rules:41:35 - WARNING Invalid variable name: request. 
[warn] !  firestore.rules:47:14 - WARNING Unused function: isValidUpdatedPost. 
[warn] !  firestore.rules:48:18 - WARNING Invalid variable name: request. 
[info] +  firestore: Rules updated. 
[debug] [2020-12-02T15:49:44.827Z] Dec 02, 2020 8:49:44 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:49:44 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:49:44.852Z] Dec 02, 2020 8:49:44 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:49:44 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:49:44.936Z] Dec 02, 2020 8:49:44 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:49:44 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:49:44.948Z] Dec 02, 2020 8:49:44 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError
INFO: operation failed: No matching allow statements
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:49:44 AM com.google.cloud.datastore.emulator.impl.util.WrappedStreamObserver onError\r\nINFO: operation failed: No matching allow statements\r\n"}}
[debug] [2020-12-02T15:49:45.221Z] Dec 02, 2020 8:49:45 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:49:45 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T15:49:45.221Z] Dec 02, 2020 8:49:45 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:49:45 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T15:50:10.371Z] Dec 02, 2020 8:50:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:50:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:50:10.395Z] Dec 02, 2020 8:50:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:50:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:50:10.487Z] Dec 02, 2020 8:50:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:50:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:50:10.547Z] Dec 02, 2020 8:50:10 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:50:10 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T15:50:10.548Z] Dec 02, 2020 8:50:10 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:50:10 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T15:50:12.921Z] Dec 02, 2020 8:50:12 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:50:12 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-02T15:50:56.829Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-02T15:50:56.836Z] Dec 02, 2020 8:50:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:50:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:50:56.876Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-02T15:51:15.913Z] Dec 02, 2020 8:51:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:51:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:51:15.937Z] Dec 02, 2020 8:51:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:51:15 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:51:16.031Z] Dec 02, 2020 8:51:16 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:51:16 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:51:16.155Z] Dec 02, 2020 8:51:16 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:51:16 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T15:51:16.155Z] Dec 02, 2020 8:51:16 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:51:16 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-02T15:51:45.729Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n\n\n\n\n\n\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n\n\n\n\n\n\n\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-02T15:51:45.736Z] Dec 02, 2020 8:51:45 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:51:45 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:51:45.779Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-02T15:51:56.778Z] Dec 02, 2020 8:51:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:51:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:51:56.801Z] Dec 02, 2020 8:51:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:51:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:51:56.891Z] Dec 02, 2020 8:51:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:51:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T15:51:56.994Z] Dec 02, 2020 8:51:56 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:51:56 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T15:51:56.994Z] Dec 02, 2020 8:51:56 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 8:51:56 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T17:10:10.266Z] Dec 02, 2020 10:10:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 10:10:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-02T17:10:10.344Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n\n\n\n\n\n\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n\n\n\n\n\n\n\n\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-02T17:10:10.345Z] Dec 02, 2020 10:10:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 10:10:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T17:10:10.348Z] Dec 02, 2020 10:10:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 10:10:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T17:10:10.349Z] Dec 02, 2020 10:10:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 10:10:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T17:10:10.396Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-02T17:10:10.471Z] Dec 02, 2020 10:10:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 10:10:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T17:10:10.601Z] Dec 02, 2020 10:10:10 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 10:10:10 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T17:10:10.601Z] Dec 02, 2020 10:10:10 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 10:10:10 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T17:10:30.011Z] Dec 02, 2020 10:10:30 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 10:10:30 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T17:10:30.034Z] Dec 02, 2020 10:10:30 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 10:10:30 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T17:10:30.130Z] Dec 02, 2020 10:10:30 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 10:10:30 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T17:10:30.205Z] Dec 02, 2020 10:10:30 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 10:10:30 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[debug] [2020-12-02T17:10:30.205Z] Dec 02, 2020 10:10:30 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
WARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: An existing connection was forcibly closed by the remote host
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(Unknown Source)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.read(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.read(Unknown Source)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 10:10:30 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\njava.io.IOException: An existing connection was forcibly closed by the remote host\r\n\tat sun.nio.ch.SocketDispatcher.read0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.read(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)\r\n\tat sun.nio.ch.IOUtil.read(Unknown Source)\r\n\tat sun.nio.ch.SocketChannelImpl.read(Unknown Source)\r\n\tat io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)\r\n\tat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)\r\n\tat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-02T23:19:03.822Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    match /posts/{postId} {\n          allow read: if request.auth.uid != null;\n          allow write: if request.auth.uid == userId;\n    }\n\n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n"}]}}
[debug] [2020-12-02T23:19:03.861Z] Dec 02, 2020 4:19:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 4:19:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T23:19:03.877Z] Dec 02, 2020 4:19:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 4:19:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T23:19:03.925Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"258"}
[warn] !  firestore.rules:7:47 - WARNING Invalid variable name: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-02T23:19:28.333Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents \n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n    \n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-02T23:19:28.336Z] Dec 02, 2020 4:19:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 4:19:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T23:19:28.367Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"975"}
[warn] !  firestore.rules:3:9 - ERROR Missing 'match' keyword before path. 
[warn] !  firestore.rules:5:5 - ERROR Unexpected 'match'. 
[warn] !  firestore.rules:5:5 - ERROR mismatched input 'match' expecting {'{', '/', PATH_SEGMENT} 
[warn] !  firestore.rules:47:1 - ERROR Unexpected '}'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-02T23:19:34.400Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n    \n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-02T23:19:34.404Z] Dec 02, 2020 4:19:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 4:19:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T23:19:34.434Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-02T23:51:41.363Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/fireship-dev-17429:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n\n    match /users/{userId} {\n        \n      allow read: if isSignedIn();\n      allow update, delete: if hasAnyRole(['admin']);\n      \n    }\n    \n    match /posts/{postId} {\n        allow read: if ( isSignedIn() && resource.data.published ) || hasAnyRole(['admin']);\n        allow create: if isValidNewPost() && hasAnyRole(['author']);\n        allow update: if isValidUpdatedPost() && hasAnyRole(['author', 'editor', 'admin']);\n        allow delete: if hasAnyRole(['admin']);\n    }\n\n\n    function isSignedIn() {\n      return request.auth != null;\n    }\n\n    function hasAnyRole(roles) {\n      return isSignedIn()\n              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles)\n    }\n\n    function isValidNewPost() {\n      let post = request.resource.data;\n      let isOwner = post.uid == request.auth.uid;\n      let isNow = request.time == request.resource.data.createdAt;\n      let hasRequiredFields = post.keys().hasAll(['content', 'uid', 'createdAt', 'published']);\n\n      return isOwner && hasRequiredFields && isNow;\n    }\n\n    function isValidUpdatedPost() {\n      let post = request.resource.data;\n      let hasRequiredFields = post.keys().hasAny(['content', 'updatedAt', 'published']);\n      let isValidContent = post.content is string && post.content.size() < 5000;\n\n      return hasRequiredFields && isValidContent;\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//  \t\t\tallow read: if request.auth.uid != null;\n//       allow create: if canCreateMessage();\n//     }\n    \n//   \tfunction canCreateMessage() {\n//       let isSignedIn = request.auth.uid != null;\n//       let isOwner = request.auth.uid == request.resource.data.uid;\n//       let isNotTooLong = request.resource.data.text.size() < 255;\n//       let isNow = request.time == request.resource.data.createdAt;\n\n//       let isNotBanned = exists(\n//       \t/databases/$(database)/documents/banned/$(request.auth.uid)\n//       ) == false;\n      \n//       return isSignedIn && isOwner && isNotTooLong && isNow && isNotBanned;\n//     }\n    \n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n\n//     match /todos/{docId} {\n \n//       allow create: if isLoggedIn() && hasProfile(request.auth.uid)\n\n \n//       allow delete: if isLoggedIn() && isAdmin(request.auth.uid)\n//     }\n\n\n//     function isLoggedIn() { \n//       return request.auth.uid != null;\n//     }\n\n//     function hasProfile(uid) {\n//         return exists(/databases/$(database)/documents/users/$(uid))\n//     }\n\n//     function isAdmin(uid) {\n//       let profile = get(/databases/$(database)/documents/users/$(uid))\n\n//       return profile.data.admin == true\n//     }\n \n\n\n    \n\n//   }\n// }\n\n\n\n\n\n\n    // match /users/{userId} {\n\n    //   allow read: if isLoggedIn();\n    //   allow write: if belongsTo(userId);\n\n    // }\n\n    // match /todos/{docId} {\n\n    //   allow read: if resource.data.status == 'published';\n\n    //   allow create: if canCreateTodo();\n                    \n\n    //   allow update: if belongsTo() \n    //                 && request.resource.data.keys().hasOnly(['text', 'status']);\n    // }\n\n    // function isLoggedIn() { \n    //   return request.auth.uid != null;\n    // }\n\n    // function belongsTo(userId) {    \n    //   return request.auth.uid == userId || request.auth.uid == resource.data.uid;\n    // }\n\n    // function canCreateTodo() {\n    //   let uid = request.auth.uid;\n    //   let hasValidTimestamp = request.time == request.resource.data.createdAt;\n\n    //   return belongsTo(uid) && hasValidTimestamp;\n    // }\n    \n\n\n\n\n\n\n\n\n\n  //  match /users/{userId} {\n\n  //     allow read: if request.auth.uid != null;\n  //     allow write: if request.auth.uid == userId;\n\n  //   }\n\n  //   match /todos/{docId} {\n\n  //     allow read: if resource.data.status == 'published';\n\n  //     allow create: if request.auth.uid == resource.data.uid \n  //                   && request.time == request.resource.data.createdAt;\n                    \n\n  //     allow update: if request.auth.uid == resource.data.uid \n  //                   && request.resource.data.keys().hasOnly(['text', 'status']);\n  //   }\n    \n\n\n\n    // match /users/someId {\n    //   // Single document\n    // }\n    \n    // match /users/{docId} {\n    //   // Single Collection\n    // }\n\n    // match /users/{docId=**} {\n    //   // Recursive wildcard, includes all subcollections\n    // }\n\n\n\n  // match /users/{docId=**} {\n\n  //     allow read, write;\n\n  //     allow get;\n  //     allow list;\n\n  //     allow create;\n  //     allow update;\n  //     allow delete;\n      \n  //   }"}]}}
[debug] [2020-12-02T23:51:41.367Z] Dec 02, 2020 4:51:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 4:51:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected non-HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T23:51:41.373Z] Dec 02, 2020 4:51:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Dec 02, 2020 4:51:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\r\nINFO: Detected HTTP/2 connection.\r\n"}}
[debug] [2020-12-02T23:51:41.406Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
